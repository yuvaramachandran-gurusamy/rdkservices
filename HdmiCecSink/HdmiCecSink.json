{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/rdkservices/main/Tools/json_generator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "HdmiCecSink API", 
        "class": "HdmiCecSink", 
        "description": "The `HdmiCecSink` plugin allows you to manage HDMI Consumer Electronics Control (CEC) sink for connected devices."
    },
    "common": {
        "$ref": "../common/common.json"
    },
    "definitions": {
        "available": {
            "summary": "If `true`, then there is an active source available and source details are included in the result. If `false`, then there is no active source.",
            "type":"boolean",
            "example": true
        },
        "logicalAddress":{
            "summary": "Logical address of the device",
            "type":"integer",
            "example": 4
        },
        "physicalAddress": {
            "summary": "Physical address of the device",
            "type":"string",
            "example": "1.0.0.0"
        },
        "deviceType": {
            "summary": "Type of the device",
            "type":"string",
            "example": "Playback Device"
        },
        "osdName":{
            "summary": "OSD name of the device if available",
            "type":"string",
            "example": "Fire TV Stick"
        },
        "vendorID":{
            "summary": "Vendor ID of the device",
            "type":"string",
            "example": "0ce7"
        },
        "cecVersion": {
            "summary": "CEC version supported",
            "type": "string",
            "example": "Version 1.4"
        },
        "powerStatus": {
            "summary": "Power status of the device",
            "type": "string",
            "example": "Standby"
        },
        "enabled": {
            "summary": "Indicates whether HDMI-CEC is enabled (`true`) or disabled (`false`) in the platform",
            "type":"boolean",
            "example": false
        },
        "vendorid": {
            "summary": "Vendor ID for this device. The ID can have a maximum of 6 characters.",
            "type": "string",
            "example": "0019fc"                        
        },
        "status": {
            "summary": "Whether the operation succeeded",
            "type": "string",
            "example": "success"
        },
        "port": {
            "summary": "Port of the device",
            "type": "string",
            "example": "HDMI0"
        },
        "connected": {
            "summary": "`true` if an audio device is connected, otherwise `false`",
            "type": "boolean",
            "example": true
        },
        "name": {
           "summary": "The OSD Name",
           "type": "string",
           "example": "Fire TV Stick"
        },
        "printed": {
           "summary": "Whether device list is printed",
           "type": "boolean",
           "example": true
        }
    },
    "methods": {
        "getActiveRoute": {
            "summary": "Gets details for the current route from the source to sink devices. This API is used for debugging the route.",
            "result": {
                "type": "object",
                "properties": {
                    "available": {
                        "$ref": "#/definitions/available"
                    },
                    "length": {
                        "summary": "The number of devices in the path list",
                        "type":"integer",
                        "example": 1
                    },
                    "pathList":{
                        "summary": "Object [] of information about each device in the active path",
                        "type":"array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "logicalAddress": {
                                    "$ref": "#/definitions/logicalAddress"
                                },
                                "physicalAddress": {
                                    "$ref": "#/definitions/physicalAddress"
                                },
                                "deviceType": {
                                    "$ref": "#/definitions/deviceType"
                                },
                                "osdName":{
                                    "$ref": "#/definitions/osdName"
                                },
                                "vendorID":{
                                    "$ref": "#/definitions/vendorID"
                                }
                            },
                            "required": [
                                "logicalAddress",
                                "physicalAddress",
                                "deviceType",
                                "osdName",
                                "vendorID"
                            ]
                        }
                    },
                    "ActiveRoute": {
                        "summary": "Gives the route from source to sink with the device type and OSD name as an identifier",
                        "type":"string",
                        "example": "Playback Device 1(Fire TV Stick)-->HDMI0"
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "available",
                    "length",
                    "pathList",
                    "ActiveRoute",
                    "success"
                ]
            }
        },
        "getActiveSource": {
            "summary": "Gets details for the current active source.",
            "result": {
                "type": "object",
                "properties": {
                    "available": {
                        "$ref": "#/definitions/available"                        
                    },
                    "logicalAddress": {
                        "$ref": "#/definitions/logicalAddress"
                    },
                    "physicalAddress": {
                        "$ref": "#/definitions/physicalAddress"
                    },
                    "deviceType": {
                        "$ref": "#/definitions/deviceType"
                    },
                    "cecVersion": {
                        "$ref": "#/definitions/cecVersion"
                    },
                    "osdName":{
                        "$ref": "#/definitions/osdName"
                    },
                    "vendorID":{
                        "$ref": "#/definitions/vendorID"
                    },
                    "powerStatus": {
                        "$ref": "#/definitions/powerStatus"
                    },
                    "port": {
                        "$ref": "#/definitions/port"
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "available",
                    "logicalAddress",
                    "physicalAddress",
                    "deviceType",
                    "cecVersion",
                    "osdName",
                    "vendorID",
                    "powerStatus",
                    "port",
                    "success"
                ]
            }
        },
        "getAudioDeviceConnectedStatus": {
            "summary": "Get status of audio device connection.",
            "result": {
                "type": "object",
                "properties": {
                    "connected": {
                       "$ref": "#/definitions/connected"
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "connected",
                    "success"
                ]
            }
        },
        "getDeviceList":{
            "summary": "Gets the number of connected source devices and system information for each device. The information includes device type, physical address, CEC version, vendor ID, power status and OSD name.",
            "result": {
                "type": "object",
                "properties": {
                    "numberofdevices": {
                        "summary": "number of devices in the `devicelist` array", 
                        "type": "integer",
                        "example": 1
                    },
                    "deviceList":{
                        "summary": "Object [] of information about each device",
                        "type":"array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "logicalAddress": {
                                    "$ref": "#/definitions/logicalAddress"
                                },
                                "physicalAddress": {
                                    "$ref": "#/definitions/physicalAddress"
                                },
                                "deviceType": {
                                    "$ref": "#/definitions/deviceType"
                                },
                                "cecVersion": {
                                    "$ref": "#/definitions/cecVersion"
                                },
                                "osdName":{
                                    "$ref": "#/definitions/osdName"
                                },
                                "vendorID":{
                                    "$ref": "#/definitions/vendorID"
                                },
                                "powerStatus": {
                                    "$ref": "#/definitions/powerStatus"
                                },
                                "portNumber": {
                                    "Summary": "HDMI port number of the device",
                                    "type": "integer",
                                    "example": 0
                                }
                            },
                            "required": [
                                "logicalAddress",
                                "physicalAddress",
                                "deviceType",
                                "cecVersion",
                                "osdName",
                                "vendorID",
                                "powerStatus",
                                "portNumber"
                            ]
                        }
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "numberofdevices",
                    "deviceList",
                    "success"
                ]
            }
        },
        "getEnabled":{
            "summary": "Returns whether HDMI-CEC is enabled on platform or not.",
            "result": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "$ref": "#/definitions/enabled"
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "enabled",
                    "success"
                ]
            }
        },
        "getOSDName":{
            "summary": "Returns the OSD name used by host device.",
            "result": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/definitions/name"
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "name",
                    "success"
                ]
            }
        },
        "getVendorId":{
            "summary": "Gets the current vendor ID used by host device.",
            "result": {
                "type": "object",
                "properties": {
                    "vendorid": {
                        "$ref": "#/definitions/vendorid"                      
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "vendorid",
                    "success"
                ]
            }
        },
        "printDeviceList": {
            "summary": "This is a helper debug command for developers. It prints the list of connected devices and properties of connected devices like deviceType, VendorID, CEC version, PowerStatus, OSDName, PhysicalAddress etc.",
            "result": {
                "type": "object",
                "properties": {
                    "printed": {
                        "$ref": "#/definitions/printed"                      
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "printed",
                    "success"
                ]
            }
        },
        "requestActiveSource": {
            "summary": "Requests the active source in the network.",
            "events": {
                "onActiveSourceChange" : "Triggered with the active source device changes.",
                "onDeviceAdded" : "Triggered when an HDMI cable is physically connected to the HDMI port on a TV, or the power cable is connected to the source device.",
                "onDeviceInfoUpdated" : "Triggered when device information changes (physicalAddress, deviceType, vendorID, osdName, cecVersion, powerStatus)."
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "requestShortAudioDescriptor": {
            "summary": "Sends the CEC Request Short Audio Descriptor (SAD) message as an event.",
            "events": {
                "shortAudiodesciptorEvent" : "Triggered when SAD is received from the connected audio device."
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "sendAudioDevicePowerOnMessage": {
            "summary": "This message is used to power on the connected audio device. Usually sent by the TV when it comes out of standby and detects audio device connected in the network.",
            "events": {
                "setSystemAudioModeEvent" : "Triggered when CEC <Set System Audio Mode> message of device is received."
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "sendGetAudioStatusMessage": {
            "summary": "Sends the CEC \\<Give Audio Status\\> message to request the audio status.",
            "events": {
                "reportAudioStatusEvent" : "Triggered when CEC <Report Audio Status> message of device is received."
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "sendKeyPressEvent": {
            "summary": "Sends the CEC \\<User Control Pressed\\> message when TV remote key is pressed.",
            "params": {
                "type":"object",
                "properties": {
                    "logicalAddress":{
                        "$ref": "#/definitions/logicalAddress"
                    },
                    "keyCode":{
                         "summary":"The key code for the pressed key. Possible values : `0x41` (VOLUME_UP), `0x42` (VOLUME_DOWN), `0x43` (MUTE), `0x01` (UP), `0x02` (DOWN), `0x03` (LEFT), `0x04` (RIGHT), `0x00` (SELECT), `0x09` (HOME), `0x0D` (BACK), `0x20` (NUMBER_0), `0x21` (NUMBER_1), `0x22` (NUMBER_2), `0x23` (NUMBER_3), `0x24` (NUMBER_4), `0x25` (NUMBER_5), `0x26` (NUMBER_6), `0x27` (NUMBER_7), `0x28` (NUMBER_8), `0x29` (NUMBER_9)",
                         "type": "integer",
                         "example": 65
                    }
                },
                "required": [
                    "logicalAddress",
                    "keyCode"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "sendUserControlPressed": {
            "summary": "Sends the CEC \\<User Control Pressed\\> message when TV remote key is pressed.",
            "params": {
                "type":"object",
                "properties": {
                    "logicalAddress":{
                        "$ref": "#/definitions/logicalAddress"
                    },
                    "keyCode":{
                         "summary":"The key code for the pressed key. Possible values : `0x41` (VOLUME_UP), `0x42` (VOLUME_DOWN), `0x43` (MUTE), `0x01` (UP), `0x02` (DOWN), `0x03` (LEFT), `0x04` (RIGHT), `0x00` (SELECT), `0x09` (HOME), `0x0D` (BACK), `0x20` (NUMBER_0), `0x21` (NUMBER_1), `0x22` (NUMBER_2), `0x23` (NUMBER_3), `0x24` (NUMBER_4), `0x25` (NUMBER_5), `0x26` (NUMBER_6), `0x27` (NUMBER_7), `0x28` (NUMBER_8), `0x29` (NUMBER_9)",
                         "type": "integer",
                         "example": 65
                    }
                },
                "required": [
                    "logicalAddress",
                    "keyCode"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "sendUserControlReleased": {
            "summary": "Sends the CEC \\<User Control released\\> message when TV remote key is released.",
            "params": {
                "type":"object",
                "properties": {
                    "logicalAddress":{
                        "$ref": "#/definitions/logicalAddress"
                    }
                },
                "required": [
                    "logicalAddress"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "sendStandbyMessage": {
            "summary": "Sends a CEC \\<Standby\\> message to the logical address of the device.",
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setActivePath": {
            "summary": "Sets the source device to active (`setStreamPath`). The source wakes from standby if it's in the standby state.",
            "params": {
                "type":"object",
                "properties": {
                    "activePath":{
                        "summary": "Physical address of the source device",
                        "type":"string",
                        "example": "1.0.0.0"
                    }
                },
                "required": [
                    "activePath"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setActiveSource": {
            "summary": "Sets the current active source as TV (physical address 0.0.0.0). This call needs to be made when the TV switches to internal tuner or any apps.",
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setEnabled": {
            "summary": "Enables or disables HDMI-CEC support in the platform.",
            "events": {
                "reportCecEnabledEvent" : "Triggered when the HDMI-CEC is enabled."
            },
            "params": {
                "type":"object",
                "properties": {
                    "enabled":{
                        "$ref": "#/definitions/enabled" 
                    }
                },
                "required": [
                    "enabled"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setMenuLanguage": {
            "summary": "Updates the internal data structure with the new menu Language and also broadcasts the \\<Set Menu Language\\> CEC message.",
            "params": {
                "type":"object",
                "properties": {
                    "language":{
                        "summary": "3 byte ASCII defined in ISO_639-2_codes (https://en.wikipedia.org/wiki/List_of_ISO_639-2_codes)",
                        "type": "string",
                        "example": "chi" 
                    }
                },
                "required": [
                    "language"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setOSDName": {
            "summary": "Sets the OSD Name used by host device.",
            "params": {
                "type":"object",
                "properties": {
                    "name":{
                        "$ref": "#/definitions/name" 
                    }
                },
                "required": [
                    "name"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setRoutingChange":{
            "summary": "Changes routing while switching between HDMI inputs and TV.",
            "params": {
                "type":"object",
                "properties": {
                    "oldPort":{
                        "summary": "Current active port, such as `TV`, `HDMI0`, `HDMI1`, `HDMI2`",
                        "type": "string",
                        "example": "HDMI0"
                    },
                    "newPort":{
                        "summary":"New port to switch to, such as `TV`, `HDMI0`, `HDMI1`, `HDMI2`",
                        "type": "string",
                        "example": "TV"
                    }
                },
                "required": [
                    "oldPort",
                    "newPort"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setupARCRouting":{
            "summary": "Enable (or disable) HDMI-CEC Audio Return Channel (ARC) routing. Upon enabling, triggers arcInitiationEvent and upon disabling, triggers arcTerminationEvent.",
            "events": {
                "arcInitiationEvent" : "Triggered when routing though the HDMI ARC port is successfully established.",
                "arcTerminationEvent" : "Triggered when routing though the HDMI ARC port terminates."
            },
            "params": {
                "type":"object",
                "properties": {
                    "enabled":{
                        "summary": "Indicates whether HDMI-CEC ARC is enabled (`true`) or disabled (`false`). If enabled, the CEC \\<Request ARC Initiation\\> and \\<Report ARC Initiated\\> messages are sent. If disabled, the CEC \\<Request ARC Termination\\> and \\<Report ARC Terminated\\> messages are sent.",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "enabled"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setVendorId":{
            "summary": "Sets a vendor ID used by host device.",
            "params": {
                "type":"object",
                "properties": {
                    "vendorid": {
                        "$ref": "#/definitions/vendorid"                      
                    }
                },
                "required": [
                    "vendorid"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
	"setLatencyInfo": {
	    "summary": "Sets the Current Latency Values such as Video Latency, Latency Flags,Audio Output Compensated value and Audio Output Delay by sending \\<Report Current Latency\\> message for Dynamic Auto LipSync Feature",
	    "params": {
                "type":"object",
                "properties": {
		    "videoLatency": {
			"summary": "Indicates the Video Latency value of the target device",
			"type":"string",
			"example": "2"
		    },
		    "lowLatencyMode": {
			"summary": "Indicates whether low latency Mode is 0 or 1",
			"type":"string",
			"example": "1"
		    },
                    "audioOutputCompensated": {
                        "summary": "Indicates whether Audio Output is delay compensated or not. 0 = (NA)Sent by Non-TV, 1 = TV's audio Output is delay compensated, 2 = Not delay compensated, 3 = Partially delayed",
                        "type":"string",
                        "example": "1"
                    },
		    "audioOutputDelay": {
			"summary": "Indicates the Audio Output Delay value of the target device",
			"type":"string",
			"example": "20"
		    }
		},
		"required": [
		    "videoLatency",
		    "lowLatencyMode",
		    "audioOutputCompensated",
		    "audioOutputDelay"
                ]
	    },
	    "result": {
                "$ref": "#/common/result"
            }
	}
    },
    "events": {
        "arcInitiationEvent": {
            "summary": "Triggered when routing though the HDMI ARC port is successfully established",
            "params": {
                "type":"object",
                "properties": {
                    "status": {
                        "$ref": "#/definitions/status"
                    }
                },
                "required": [
                    "status"
                ]
            }
        },
        "arcTerminationEvent": {
            "summary": "Triggered when routing though the HDMI ARC port terminates",
            "params": {
                "type":"object",
                "properties": {
                    "status": {
                        "$ref": "#/definitions/status"
                    }
                },
                "required": [
                    "status"
                ]
            }
        },
        "onActiveSourceChange": {
            "summary": "Triggered with the active source device changes",
            "params": {
                "type":"object",
                "properties": {
                    "logicalAddress": {
                        "$ref": "#/definitions/logicalAddress"
                    },
                    "physicalAddress": {
                        "$ref": "#/definitions/physicalAddress"
                    }
                },
                "required": [
                    "logicalAddress",
                    "physicalAddress"
                ]
            }
        },
        "onDeviceAdded": {
            "summary": "Triggered when an HDMI cable is physically connected to the HDMI port on a TV, or the power cable is connected to the source device.  After a new device is hotplugged to the port, various information is collected such as CEC version, OSD name, vendor ID, and power status. The `onDeviceAdded` event is sent as soon as any of these details are available. However, the connected device sends the information asynchronously; therefore, the information may not be collected immediately.",
            "params": {
                "type":"object",
                "properties": {
                    "logicalAddress": {
                        "$ref": "#/definitions/logicalAddress"
                    }
                },
                "required": [
                    "logicalAddress"
                ]
            }
        },
        "onDeviceInfoUpdated": {
            "summary": "Triggered when device information changes (physicalAddress, deviceType, vendorID, osdName, cecVersion, powerStatus)",
            "params": {
                "type":"object",
                "properties": {
                    "logicalAddress": {
                        "$ref": "#/definitions/logicalAddress"
                    }
                },
                "required": [
                    "logicalAddress"
                ]
            }            
        },
        "onDeviceRemoved": {
            "summary": "Triggered when HDMI cable is physically removed from the HDMI port on a TV or the power cable is removed from the source device. The device is considered removed when no ACK messages are received after pinging the device.",
            "params": {
                "type":"object",
                "properties": {
                    "logicalAddress": {
                        "$ref": "#/definitions/logicalAddress"
                    }
                },
                "required": [
                    "logicalAddress"
                ]
            }
        },
        "onImageViewOnMsg": {
            "summary": "Triggered when an \\<Image View ON\\> CEC message is received from the source device",
            "params": {
                "type":"object",
                "properties": {
                    "logicalAddress": {
                        "$ref": "#/definitions/logicalAddress"
                    }
                },
                "required": [
                    "logicalAddress"
                ]
            }
        },
        "onInActiveSource": {
            "summary": "Triggered when the source is no longer active",
            "params": {
                "type":"object",
                "properties": {
                    "logicalAddress": {
                        "$ref": "#/definitions/logicalAddress"
                    },
                    "physicalAddress": {
                        "$ref": "#/definitions/physicalAddress"
                    }
                },
                "required": [
                    "logicalAddress",
                    "physicalAddress"
                ]
            }
        },
        "onTextViewOnMsg": {
            "summary": "Triggered when a \\<Text View ON\\> CEC message is received from the source device",
            "params": {
                "type":"object",
                "properties": {
                    "logicalAddress": {
                        "$ref": "#/definitions/logicalAddress"
                    }
                },
                "required": [
                    "logicalAddress"
                ]
            }
        },
        "onWakeupFromStandby": {
            "summary": "Triggered when the TV is in standby mode and it receives \\<Image View ON\\>/ \\<Text View ON\\>/ \\<Active Source\\> CEC message from the connected source device. This event will be notified to UI/Application and application will bring the TV out of standby",
            "params": {
                "type":"object",
                "properties": {
                    "logicalAddress": {
                        "$ref": "#/definitions/logicalAddress"
                    }
                },
                "required": [
                    "logicalAddress"
                ]
            }
        },
        "reportAudioDeviceConnectedStatus": {
            "summary": "Triggered when an audio device is added or removed",
            "params": {
                "type":"object",
                "properties": {
                    "status": {
                        "summary": "The status",
                        "type": "string",
                        "example": "success"
                    },
                    "audioDeviceConnected": {
                         "summary": "`true` if an audio device is connected, otherwise `false`",
                         "type": "string",
                         "example": "true"
                    }
                },
                "required": [
                    "status",
                    "audioDeviceConnected"
                ]
            }
        },
        "reportAudioStatusEvent": {
            "summary": "Triggered when CEC \\<Report Audio Status\\> message of device is received",
            "params": {
                "type":"object",
                "properties": {
                    "muteStatus": {
                         "summary": "The mute status",
                         "type": "integer",
                         "example": 0
                    },
                    "volumeLevel": {
                        "summary": "The volume level of device",
                        "type": "integer",
                        "example": 28
                    }
                },
                "required": [
                    "muteStatus",
                    "volumeLevel"
                ]
            }
        },
        "reportFeatureAbortEvent": {
            "summary": "Triggered when CEC \\<Feature Abort\\> message of device is received",
            "params": {
                "type":"object",
                "properties": {
                    "logicalAddress": {
                         "summary": "Logical address of the device",
                         "type": "integer",
                         "example": 4
                    },
                    "opcode": {
                        "summary": "The opcode send to the device",
                        "type": "integer",
                        "example": 0
                    },
                    "FeatureAbortReason": {
                        "summary": "Reason for the feature abort",
                        "type": "integer",
                        "example": 0
                    }
                },
                "required": [
                    "logicalAddress",
                    "opcode",
                    "FeatureAbortReason"
                ]
            }
        },
        "reportCecEnabledEvent": {
            "summary": "Triggered when the HDMI-CEC is enabled",
            "params": {
                "type":"object",
                "properties": {
                    "cecEnable": {
                        "summary": "Whether the cec is enabled",
                        "type": "string",
                        "example": "true"
                    }
                },
                "required": [
                    "cecEnable"
                ]
            }
        },
        "setSystemAudioModeEvent":{
            "summary": "Triggered when CEC \\<Set System Audio Mode\\> message of device is received",
            "params": {
                "type":"object",
                "properties": {
                    "audioMode": {
                         "summary": "Audio mode of system",
                         "type":"string",
                         "example": "On"
                    }
                },
                "required": [
                    "audioMode"
                ]
            }
        },
        "shortAudiodesciptorEvent": {
            "summary": "Triggered when SAD is received from the connected audio device. See `requestShortAudioDescriptor`",
            "params": {
                "type":"object",
                "properties": {
                    "ShortAudioDescriptor": {
                        "summary": "The SAD information (formatid, audioFormatCode, numberofdescriptor)",
                        "type": "array",
                        "items":{
                            "type": "integer",      
                            "example": [0, 10, 2]
                        }
                    }
                },
                "required": [
                    "ShortAudioDescriptor"
                ]
            }
        },
        "standbyMessageReceived":{
            "summary": "Triggered when the source device changes status to `STANDBY`",
            "params": {
                "type":"object",
                "properties": {
                    "logicalAddress": {
                        "$ref": "#/definitions/logicalAddress"
                    }
                },
                "required": [
                    "logicalAddress"
                ]
            }
        }
        
    }
}
